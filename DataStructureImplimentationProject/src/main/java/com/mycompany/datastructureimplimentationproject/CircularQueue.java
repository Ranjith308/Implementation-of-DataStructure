/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.datastructureimplimentationproject;

import javax.swing.JOptionPane;

/**
 *
 * @author Ranjith
 */
public class CircularQueue extends javax.swing.JFrame {

    /**
     * Creates new form CircularQueue
     */
private int queue[];
private int rear = -1;
private int front = -1;
private int size;
    public CircularQueue() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        CreateText = new javax.swing.JTextField();
        CirCreate = new javax.swing.JButton();
        insertText = new javax.swing.JTextField();
        CirDel = new javax.swing.JButton();
        DeleteText = new javax.swing.JTextField();
        DisplayText = new javax.swing.JTextField();
        Display = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        CirInsert = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(242, 242, 242));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Circular Queue DataStructure");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(119, 23, 210, 49));
        getContentPane().add(CreateText, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 90, 111, 30));

        CirCreate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        CirCreate.setText("Create");
        CirCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CirCreateActionPerformed(evt);
            }
        });
        getContentPane().add(CirCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 94, -1, -1));
        getContentPane().add(insertText, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 162, 111, -1));

        CirDel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        CirDel.setText("Delete");
        CirDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CirDelActionPerformed(evt);
            }
        });
        getContentPane().add(CirDel, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 232, -1, -1));

        DeleteText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteTextActionPerformed(evt);
            }
        });
        getContentPane().add(DeleteText, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 232, 111, 23));

        DisplayText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayTextActionPerformed(evt);
            }
        });
        getContentPane().add(DisplayText, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 308, 174, 69));

        Display.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Display.setText("Display");
        Display.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayActionPerformed(evt);
            }
        });
        getContentPane().add(Display, new org.netbeans.lib.awtextra.AbsoluteConstraints(275, 331, -1, -1));

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 420, -1, -1));

        CirInsert.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        CirInsert.setText("Insert");
        CirInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CirInsertActionPerformed(evt);
            }
        });
        getContentPane().add(CirInsert, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 162, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Data-hologram-on-a-dark-background.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CirCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CirCreateActionPerformed
        // TODO add your handling code here:
        size = Integer.parseInt(CreateText.getText());
        queue = new int[size];
        JOptionPane.showMessageDialog(CreateText, "Circular Queue Of Size " + size + " Is Created");
    }//GEN-LAST:event_CirCreateActionPerformed

    private void CirInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CirInsertActionPerformed
        // TODO add your handling code here:
         int element = Integer.parseInt(insertText.getText());

    // Check if the queue is full
    if ((rear + 1) % queue.length == front) {
        JOptionPane.showMessageDialog(insertText, "Queue is Full, Cannot Insert the Element", "Warning", JOptionPane.WARNING_MESSAGE);
    } else {
        // If queue is empty, set front to 0
        if (front == -1) {
            front = 0;
        }
        
        // Insert the element in a circular manner
        rear = (rear + 1) % queue.length;
        queue[rear] = element;
        
        JOptionPane.showMessageDialog(insertText, "Element " + queue[rear] + " is Inserted in Queue at " + rear);
    }
    }//GEN-LAST:event_CirInsertActionPerformed

    private void CirDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CirDelActionPerformed
        // TODO add your handling code here:
    if (front == -1) {
        JOptionPane.showMessageDialog(DeleteText, "Queue is Empty. Deletion Not Possible", "Warning", JOptionPane.WARNING_MESSAGE);
    } else {
        // Retrieve and display the element being deleted
        int deletedElement = queue[front];
        
        // Check if the queue will be empty after this deletion
        if (front == rear) {
            // Reset the queue to empty state
            front = -1;
            rear = -1;
        } else {
            // Move front in a circular manner
            front = (front + 1) % queue.length;
        }
        
        JOptionPane.showMessageDialog(DeleteText, "Element " + deletedElement + " is Deleted");
    }

    }//GEN-LAST:event_CirDelActionPerformed

    private void DeleteTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteTextActionPerformed

    private void DisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayActionPerformed
        // TODO add your handling code here: 
      DisplayText.setText("");
    if (front == -1) {
        JOptionPane.showMessageDialog(DisplayText, "Display Not Possible. Queue Is Empty", "Warning", JOptionPane.WARNING_MESSAGE);
    } else {
        // Clear previous display text
        DisplayText.setText("");
        
        // Traverse and display the elements in circular order
        int i = front;
        do {
            DisplayText.setText(DisplayText.getText() + queue[i] + " ");
            i = (i + 1) % queue.length;
        } while (i != (rear + 1) % queue.length);
    
    }
    }//GEN-LAST:event_DisplayActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        HomeApp app = new HomeApp();
        app.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void DisplayTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DisplayTextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CircularQueue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CircularQueue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CircularQueue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CircularQueue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CircularQueue().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CirCreate;
    private javax.swing.JButton CirDel;
    private javax.swing.JButton CirInsert;
    private javax.swing.JTextField CreateText;
    private javax.swing.JTextField DeleteText;
    private javax.swing.JButton Display;
    private javax.swing.JTextField DisplayText;
    private javax.swing.JTextField insertText;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
